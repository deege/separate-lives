name: GameCI Template ðŸŽ®

on:
  push:
    branches:
      - master

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  setupJob: # new job to handle the common setup steps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Archive project
        uses: actions/upload-artifact@v3
        with:
          name: project
          path: .

  testRunner:
    needs: setupJob
    name: Test in ${{ matrix.testMode }} âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
    steps:
      - name: Restore Library cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-test-project-${{ matrix.testMode }}
          restore-keys: |
            Library-test-project-
            Library-

      - name: Download project
        uses: actions/download-artifact@v3
        with:
          name: project

      # - name: Run tests
      #   uses: game-ci/unity-test-runner@v3
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   with:
      #     githubToken: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: Test results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWebGL:
    if: github.ref == 'refs/heads/main' # this condition ensures the job only runs when the commit is on the main branch
    needs: [setupJob, testRunner]
    name: Build for WebGL ðŸ“±
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: WebGL

      - uses: actions/upload-artifact@v3
        with:
          name: webgl
          path: build/WebGL

  buildWindows:
    if: github.ref == 'refs/heads/main' # this condition ensures the job only runs when the commit is on the main branch
    needs: [setupJob, testRunner]
    name: Build for Windows ðŸ“±
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v3
        with:
          name: win64
          path: build/StandaloneWindows64

  buildMac:
    if: github.ref == 'refs/heads/main' # this condition ensures the job only runs when the commit is on the main branch
    needs: [setupJob, testRunner]
    name: Build for Mac ðŸ“±
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneOSX

      - uses: actions/upload-artifact@v3
        with:
          name: osx
          path: build/StandaloneOSX

  buildAndroid:
    if: github.ref == 'refs/heads/main' # this condition ensures the job only runs when the commit is on the main branch
    needs: [setupJob, testRunner]
    name: Build for Android ðŸ“±
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: Android
      - uses: actions/upload-artifact@v3
        with:
          name: android
          path: build/Android

  zip-files:
    if: github.ref == 'refs/heads/main' # this condition ensures the job only runs when the commit is on the main branch
    needs: buildWebGL
    name: Build for Android ðŸ“±
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: papeloto/action-zip@v1
        with:
          files: build/WebGL
          dest: build/Zip/${{ secrets.ITCH_GAME_ID }}-webgl.zip

  deployPages:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/release') # Runs only if the commit is tagged with 'release'
    needs: buildWebGL
    name: Deploy to Github Pages ðŸš€
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: webgl
          path: build

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/WebGL

  deployItchIO:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/release') # Runs only if the commit is tagged with 'release'
    needs: [buildWebGL, buildAndroid, buildMac, buildWindows, zip-files]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        channel:
          - win64
          - webgl
          - osx
          - android
    name: Deploy - Itch.io ${{ matrix.template }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.channel }}
          path: build/${{ matrix.channel }}
      - uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{secrets.BUTLER_API_KEY}}
          gameData: ./build/${{ matrix.channel }}
          itchUsername: ${{secrets.ITCH_IO_USERNAME}}
          itchGameId: ${{ secrets.ITCH_GAME_ID }}
          buildChannel: ${{ matrix.channel }}
          buildNumber: ${{ needs.version.outputs.version_hash }}
